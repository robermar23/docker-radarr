---

# project information
project_name: radarr
project_url: "https://github.com/Radarr/Radarr"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png"
project_blurb: |
  [{{ project_name|capitalize }}]({{ project_url }}) - A fork of Sonarr to work with movies Ã  la Couchpotato.
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v7-latest"}

# development version
development_versions: true
development_versions_items:
  - { tag: "latest", desc: "Stable Radarr releases" }
  - { tag: "develop", desc: "Radarr releases from their develop branch" }
  - { tag: "nightly", desc: "Radarr releases from their nightly branch" }

# container parameters
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "/path/to/data", desc: "Database and Radarr configs" }

opt_param_usage_include_vols: true
opt_param_volumes:
  - { vol_path: "/movies", vol_host_path: "/path/to/movies", desc: "Location of Movie library on disk (See note in Application setup)" }
  - { vol_path: "/downloads", vol_host_path: "/path/to/downloadclient-downloads", desc: "Location of download managers output directory (See note in Application setup)" }

param_usage_include_ports: true
param_ports:
  - { external_port: "7878", internal_port: "7878", port_desc: "The port for the Radarr webinterface" }
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London, this is required for Radarr"}
# optional env variables
opt_param_usage_include_env: false

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  Access the webui at `<your-ip>:7878`, for more information check out [Radarr](https://github.com/Radarr/Radarr).

  ### Media folders

  We have set `/movies` and `/downloads` as ***optional paths***, this is because it is the easiest way to get started. While easy to use, it has some drawbacks. Mainly losing the ability to hardlink (TL;DR a way for a file to exist in multiple places on the same file system while only consuming one file worth of space), or atomic move (TL;DR instant file moves, rather than copy+delete) files while processing content.

  Use the optional paths if you dont understand, or dont want hardlinks/atomic moves.

  The folks over at servarr.com wrote a good [write-up](https://wiki.servarr.com/Docker_Guide#Consistent_and_well_planned_paths) on how to get started with this.

# changelog
changelogs:
  - { date: "08.05.21:", desc: "Make the paths clearer to the user" }
  - { date: "17.01.21:", desc: "Deprecate `UMASK_SET` in favor of UMASK in baseimage, see above for more information." }
  - { date: "11.30.20:", desc: "Publish `develop` tag." }
  - { date: "11.28.20:", desc: "Switch to v3 .NET CORE builds (no more mono, `5.14` tag is deprecated). Rebase to Focal (for issues on arm32v7, [see here](https://docs.linuxserver.io/faq#my-host-is-incompatible-with-images-based-on-ubuntu-focal))." }
  - { date: "05.04.20:", desc: "Move app to /app." }
  - { date: "01.08.19:", desc: "Rebase to Linuxserver LTS mono version." }
  - { date: "13.06.19:", desc: "Add env variable for setting umask." }
  - { date: "10.05.19:", desc: "Rebase to Bionic." }
  - { date: "23.03.19:", desc: "Switching to new Base images, shift to arm32v7 tag." }
  - { date: "09.09.18:", desc: "Add pipeline build process." }
  - { date: "24.02.18:", desc: "Add nightly branch." }
  - { date: "06.02.18:", desc: "Radarr repo changed owner." }
  - { date: "15.12.17:", desc: "Fix continuation lines." }
  - { date: "17.04.17:", desc: "Switch to using inhouse mono baseimage, adds python also." }
  - { date: "13.04.17:", desc: "Switch to official mono repository." }
  - { date: "10.01.17:", desc: "Initial Release." }
